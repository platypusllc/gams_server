
#ifndef   _THREAD_JSON_READ_H_
#define   _THREAD_JSON_READ_H_

#include <cmath>
#include <functional>
#include <eigen3/Eigen/Core>
#include <GeographicLib/GeoCoords.hpp>

#include "io_thread.h"
#include "localization.h"
#include "../datum.h"
#include "../utility.h"

enum class RMC_STRING
{
  SENTENCE_TYPE = 0,
  TIME = 1,
  STATUS = 2,
  LAT_RAW = 3,
  LAT_CARDINAL = 4,
  LON_RAW = 5,
  LON_CARDINAL = 6,
  SPEED = 7,
  TRACK_ANGLE = 8
};
static std::string NORTH = "N";
static std::string EAST = "E";

namespace threads
{
  /**
  * A custom thread generated by gpc.pl
  **/
  class JSON_read : public io_thread
  {
  public:
    /**
     * Default constructor
     **/
    JSON_read (std::shared_ptr<asio::serial_port> port, Containers & containers, 
                threads::localization * localization_ref);
    
    /**
     * Destructor
     **/
    virtual ~JSON_read ();

    /**
      * Executes the main thread logic
      **/
    virtual void run (void);

  private:
    double GPRMC_to_degrees(double value);
    char end_of_line_char_;
    int rejected_line_count_;
    std::function<void(Datum)> new_sensor_callback;
  };
} // end namespace threads

#endif // _THREAD_JSON_READ_H_
